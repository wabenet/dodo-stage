syntax = "proto3";

package com.wabenet.dodo.stage.v1alpha4;

option go_package = "github.com/wabenet/dodo-stage/api/stage/v1alpha4";

import "google/protobuf/empty.proto";
import "core/v1alpha5/plugin.proto";

service Plugin {
  rpc GetPluginInfo(google.protobuf.Empty) returns (com.wabenet.dodo.core.v1alpha5.PluginInfo);
  rpc InitPlugin(google.protobuf.Empty) returns (com.wabenet.dodo.core.v1alpha5.InitPluginResponse);
  rpc ResetPlugin(google.protobuf.Empty) returns (google.protobuf.Empty);

  rpc GetStage(GetStageRequest) returns (GetStageResponse);
  rpc CreateStage(CreateStageRequest) returns (google.protobuf.Empty);
  rpc DeleteStage(DeleteStageRequest) returns (google.protobuf.Empty);
  rpc StartStage(StartStageRequest) returns (google.protobuf.Empty);
  rpc StopStage(StopStageRequest) returns (google.protobuf.Empty);
}

enum StageStatus {
  NONE = 0;
  DOWN = 1;
  UP   = 2;
}

message StageInfo {
  string      name   = 1;
  StageStatus status = 3;
}

message SSHOptions {
  string hostname         = 1;
  int32  port             = 2;
  string username         = 3;
  string private_key_file = 4;
}

message ProxyConfig {
  string url       = 1;
  string ca_path   = 2;
  string cert_path = 3;
  string key_path  = 4;
}

message GetStageRequest {
  string name = 1;
}

message GetStageResponse {
  StageInfo   info        = 1;
  SSHOptions  ssh_options = 2;
  ProxyConfig connection  = 3;
}

message CreateStageRequest {
  string name = 1;
}

message DeleteStageRequest {
  string name    = 1;
  bool   force   = 2;
  bool   volumes = 3;
}

message StartStageRequest{
  string name = 1;
}

message StopStageRequest {
  string name = 1;
}
